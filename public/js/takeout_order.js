document.addEventListener("DOMContentLoaded", () => {

    const loginForm = document.getElementById('loginForm');
    const guestOrderButton = document.getElementById("guestOrderButton");
    const registerButton = document.getElementById("client_registration");
    
    //Î°úÍ∑∏Ïù∏ Ìèº Ï†úÏ∂ú Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà
    if (loginForm) {
        loginForm.addEventListener('submit', async (event) => {
        event.preventDefault(); //Í∏∞Î≥∏ Ìèº Ï†úÏ∂ú Î∞©ÏßÄ

        const user_id = document.getElementById('userid').value.trim();
        const password = document.getElementById('password').value.trim();
        const messageBox = document.getElementById('message');

        try {
            // ÏÑúÎ≤ÑÎ°ú Î°úÍ∑∏Ïù∏ ÏöîÏ≤≠ Î≥¥ÎÇ¥Í∏∞
            const response = await fetch('http://localhost:5002/login', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ user_id, password }),
            });
            //ÏùëÎãµÏùÑ Î®ºÏ†Ä ÌôïÏù∏
            const responseText = await response.text();
            console.log('ÏÑúÎ≤Ñ ÏùëÎãµ:', responseText);

            try 
            {
                const parsedData = JSON.parse(responseText); // JSONÏúºÎ°ú Î≥ÄÌôò

                if (response.ok && parsedData.success) {
                    //Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µÏãú sessionStorageÏóê ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ Ï†ÄÏû•
                    sessionStorage.setItem("user_id", user_id);
                    sessionStorage.setItem("username", parsedData.username);
                    alert(`${parsedData.username}Îãò, ÌôòÏòÅÌï©ÎãàÎã§!`);  //ÌöåÏõê Ïù¥Î¶Ñ ÏïåÎ¶ºÏ∞Ω
                    window.location.href = "/member_order.html"; // ÌöåÏõêÏ£ºÎ¨∏ ÌéòÏù¥ÏßÄ Ïù¥Îèô
                } else {
                    messageBox.textContent = 'ÏïÑÏù¥Îîî ÎòêÎäî ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä Ïò¨Î∞îÎ•¥ÏßÄ ÏïäÏäµÎãàÎã§.';
                }
            } catch (error) {
                console.error('JSON ÌååÏã± Ïò§Î•ò:', error, 'ÏùëÎãµ ÎÇ¥Ïö©:', responseText);
                messageBox.textContent = 'ÏÑúÎ≤Ñ ÏùëÎãµÏù¥ Ïò¨Î∞îÎ•¥ÏßÄ ÏïäÏäµÎãàÎã§';
            }
        } catch (error) {
            console.error('Î°úÍ∑∏Ïù∏ ÏöîÏ≤≠ Ïã§Ìå®:', error);
            messageBox.textContent = 'ÏÑúÎ≤ÑÏóê Ïó∞Í≤∞Ìï† Ïàò ÏóÜÏäµÎãàÎã§.';
        }

    });
}

// ÎπÑÌöåÏõê Ï£ºÎ¨∏ Î≤ÑÌäº ÌÅ¥Î¶≠ Ïãú ÎπÑÌöåÏõê Ìè¨Ïû• Ï£ºÎ¨∏ ÌéòÏù¥ÏßÄÎ°ú Ïù¥Îèô
if (guestOrderButton) {
    guestOrderButton.addEventListener("click", (event) => {
        event.preventDefault(); // Í∏∞Î≥∏ Ìèº Ï†úÏ∂ú Î∞©ÏßÄ
        console.log("ÎπÑÌöåÏõê Ï£ºÎ¨∏ ÌéòÏù¥ÏßÄÎ°ú Ïù¥Îèô");
        window.location.href = "/guest_pack_order.html";
    });
}
    
// ÌöåÏõêÍ∞ÄÏûÖ Î≤ÑÌäº ÌÅ¥Î¶≠ Ïãú client_registration.htmlÎ°ú Ïù¥Îèô
        if (registerButton) {
            registerButton.addEventListener("click", (event) => {
                event.preventDefault();
                window.location.href = "/client_registration.html?from=/takeout_order.html";  // ÌöåÏõêÍ∞ÄÏûÖ ÌéòÏù¥ÏßÄÎ°ú Ïù¥Îèô
            });
        }
    });

////////////////////////Î∞∞Í≤ΩÌôîÎ©¥///////////////////////////////
document.addEventListener("DOMContentLoaded", () => {
    const canvas = document.getElementById("backgroundCanvas");
    const ctx = canvas.getContext("2d");

    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    const waves = [];
    const numWaves = 5; 

    for (let i = 0; i < numWaves; i++) {
        waves.push({
            y: Math.random() * canvas.height,
            amplitude: Math.random() * 40 + 20, 
            wavelength: Math.random() * 80 + 40, 
            speed: Math.random() * 2 + 1 
        });
    }

    function drawWaves() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);

        ctx.fillStyle = "rgba(255, 255, 255, 0.2)";
        ctx.beginPath();
        
        for (let i = 0; i < numWaves; i++) {
            const wave = waves[i];
            ctx.moveTo(0, wave.y);

            for (let x = 0; x < canvas.width; x++) {
                const y = wave.y + Math.sin((x + wave.speed * Date.now() * 0.002) / wave.wavelength) * wave.amplitude;
                ctx.lineTo(x, y);
            }
        }

        ctx.lineTo(canvas.width, canvas.height);
        ctx.lineTo(0, canvas.height);
        ctx.closePath();
        ctx.fill();

        requestAnimationFrame(drawWaves);
    }

    drawWaves();
});

/////////////////ÌéòÏù¥ÏßÄ Ìé∏Ïùò Í∏∞Îä•////////////////////////////////////////////////////
document.addEventListener("DOMContentLoaded", () => {
    const languageButton = document.getElementById("toggle-language");

    // Ïñ∏Ïñ¥ Î≥ÄÌôòÏùÑ ÏúÑÌïú ÌÖçÏä§Ìä∏ Îß§Ìïë
    const translations = {
        ko: {
            title: "üç¶ Ìè¨Ïû• Î°úÍ∑∏Ïù∏ ü§ñ",
            subtitle: "ÎßõÏûàÎäî ÏÜåÌîÑÌä∏ ÏïÑÏù¥Ïä§ÌÅ¨Î¶ºÏùÑ Ï¶êÍ∏∞ÏÑ∏Ïöî!",
            "login-heading": "Î°úÍ∑∏Ïù∏",
            "box_login": "Î°úÍ∑∏Ïù∏",
            "username-label": "ÏïÑÏù¥Îîî:",
            "password-label": "ÎπÑÎ∞ÄÎ≤àÌò∏:",
            "login-button": "Î°úÍ∑∏Ïù∏",
            "client_registration": "ÌöåÏõêÍ∞ÄÏûÖ",
            "guestOrderButton": "ÎπÑÌöåÏõê Ï£ºÎ¨∏",
            "toggle-language": "English",
            "userid-placeholder": "ÏïÑÏù¥ÎîîÎ•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî",
            "password-placeholder": "ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî"

        },
        en: {
            title: "üç¶ pick-up Login ü§ñ",
            subtitle: "Enjoy delicious soft ice cream flavors!",
            "login-heading": "Login",
            "box_login": "LOGIN",
            "username-label": "UserID:",
            "password-label": "Password:",
            "login-button": "Login",
            "client_registration": "Sign Up",
            "guestOrderButton": "Guest Order",
            "toggle-language": "ÌïúÍµ≠Ïñ¥",
            "userid-placeholder": "Enter your ID",
            "password-placeholder": "Enter your password"
        }
    };

    let currentLanguage = "ko"; // Í∏∞Î≥∏ ÌïúÍµ≠Ïñ¥ Î™®Îìú
    let largeFontMode = false;  // ÌÅ∞ Í∏ÄÏî® Î™®Îìú Í∫ºÏßê

    // Ïñ∏Ïñ¥ Î≥ÄÍ≤Ω Ìï®Ïàò
    const updateLanguage = () => {
        const texts = translations[currentLanguage];
        //ÏùºÎ∞ò ÌÖçÏä§Ìä∏ Î≥ÄÍ≤Ω(h1, label...)
        for (const id in texts) {
            const element = document.getElementById(id);
            if (element) element.textContent = texts[id];
        }
        //input fieldÏùò placeholder Î≥ÄÍ≤Ω
        document.getElementById("userid").setAttribute("placeholder", texts["userid-placeholder"]);
        document.getElementById("password").setAttribute("placeholder", texts["password-placeholder"]);

    };

    // Ïñ∏Ïñ¥ Î≥ÄÍ≤Ω Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏
    if (languageButton) {
        languageButton.addEventListener("click", () => {
            currentLanguage = currentLanguage === "ko" ? "en" : "ko";
            updateLanguage();
        });
    }
    updateLanguage(); // Ï¥àÍ∏∞ Ïñ∏Ïñ¥ ÏÑ§Ï†ï Ï†ÅÏö©
});
    
        